name: CMake

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-10.15, windows-2019]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install Conan package manager (Unix)
      shell: bash
      run: sudo pip3 install conan==1.34.1
      if: runner.os != 'Windows'

    - name: Install Conan package manager (Windows)
      shell: bash
      run: pip3 install conan==1.34.1
      if: runner.os == 'Windows'

    - name: Check Conan version
      shell: bash
      run: conan --version

    - name: Install Qt
      uses: jurplel/install-qt-action@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake on macOS
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -GXcode
      if: runner.os == 'macOS'

    - name: Configure CMake on Windows
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -G"Visual Studio 16 2019"
      if: runner.os == 'Windows'

    - name: Build Debug
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config Debug

    - name: Test Debug
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest -V -C Debug

    - name: Build Release
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config Release

    - name: Test Release
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest -V -C Release
